from manimlib.imports import *

class symmetry(GraphScene):
    def axe(self,x1,x2,y1,y2,t=0):
        A=Axes(
            x_min=x1,x_max=x2,
            y_min=y1,y_max=y2
        )
        temp = A.get_axis_labels()
        return VGroup(A,temp).shift(t)

    def title(self,text):
        t1= TexMobject(text).to_edge(LEFT).to_edge(UP)
        self.play(Write(t1))

    def tex(self,t,dir=0):
        t1= TexMobject(t).shift(dir)
        self.play(Write(t1))

    def text(self, t, dir=0):
        t1 = TextMobject(t).shift(dir)
        self.play(Write(t1))
    def construct(self):
        t1 = TextMobject("函数的对称性", font='微软雅黑', color="#39C5BB").scale(2.3).shift(UP)
        self.play(Write(t1))
        self.wait(1)
        t2 = TexMobject("Made\,\,by\,\,Erikpsw", color="#66CCFF").next_to(t1, DOWN).shift(2 * RIGHT)
        t3=TexMobject("@Alaana").next_to(t2,DOWN)
        self.play(ShowCreation(t2))
        self.play(ShowCreation(t3))
        self.wait(2)
        G1 = VGroup(t1, t2,t3)
        self.play(Uncreate(G1))
        self.wait(1)
        self.title(r"\mathrm{case}\,1:\text{关于}y\text{轴对称(偶函数)}")
        self.wait(2)
        A=self.axe(-3,3,0,3).shift(DOWN)
        self.play(Write(A))
        self.wait(2)
        func = FunctionGraph(lambda x: x ** 2, x_min=-1.5, x_max=1.5).shift(DOWN)
        self.play(Write(func))
        self.wait(2)
        self.play(Write(Dot(A[0].c2p(1, 1))))
        l1 = Line(A[0].c2p(1,1),A[0].c2p(1,0) , color=BLUE)
        self.play(Write(l1))
        t1=TexMobject("x_0").next_to(l1,DOWN)
        self.play(Write(t1))
        self.wait()
self.play(Write(Dot(A[0].c2p(-1, 1))))
        l2 = Line(A[0].c2p(-1, 1), A[0].c2p(-1, 0), color=BLUE)
        self.play(Write(l2))
        t2 = TexMobject("-x_0").next_to(l2, DOWN)
        self.play(Write(t2))
        self.wait()
        l3=DashedLine(A[0].c2p(-1, 1),A[0].c2p(1.5,1))
        self.play(Write(l3))
        self.wait()
        t3=TexMobject("f(x_0)=f(-x_0)").next_to(l3,RIGHT)
        self.play(Write(t3))
        self.wait(2)
        self.clear()

#case2
        self.title(r"\mathrm{case}2:\text{关于原点对称(奇函数)}")
        A = self.axe(-3, 3, -2.5, 2.5)
        self.play(Write(A))
        self.wait(2)
        func = FunctionGraph(lambda x: x **3, x_min=-1.4, x_max=1.4)
        self.play(Write(func))
        self.wait(2)
self.play(Write(Dot(A[0].c2p(1, 1))))
        l1 = Line(A[0].c2p(1, 1), A[0].c2p(1, 0), color=BLUE)
        self.play(Write(l1))
        t1 = TexMobject("x_0").next_to(l1, DOWN)
        self.play(Write(t1))
        self.wait()
self.play(Write(Dot(A[0].c2p(-1, -1))))
        l2 = Line(A[0].c2p(-1, -1), A[0].c2p(-1, 0), color=BLUE)
        self.play(Write(l2))
        t2 = TexMobject("-x_0").next_to(l2, UP)
        self.play(Write(t2))
        self.wait()
        t3 = TexMobject("f(x_0)=-f(-x_0)").next_to(func, RIGHT).shift(UP)
        self.play(Write(t3))
        self.wait(2)
        self.clear()

#case3
        t5=TexMobject(r"\mathrm{case}3:f(x)\text{关于}x=x_0\text{对称}").to_edge(LEFT).to_edge(UP)
        self.play(Write(t5))
        A = self.axe(-2, 4, 0, 3).shift(DOWN)
        self.play(Write(A))
        self.wait(2)
        func = FunctionGraph(lambda x: (x-2) ** 2, x_min=0.5, x_max=3.5).shift(DOWN)
        l1=Line(A[0].c2p(2, 3), A[0].c2p(2, 0), color=BLUE)
        self.play(Write(func))
        self.wait(2)
self.play(Write(Dot(A[0].c2p(2, 3))))
        self.play(Write(l1))
        t1=TexMobject("x=x_0").next_to(l1).shift(UP)
        self.play(Write(t1))
        self.wait(2)
        l3 = Line(A[0].c2p(1, 1), A[0].c2p(1, 0), color=BLUE)
self.play(Write(Dot(A[0].c2p(1, 1))))
        self.play(Write(l3))
        t3 = TexMobject("x_1").next_to(l3, DOWN)
        self.play(Write(t3))
        self.wait()
        l2 = Line(A[0].c2p(3, 1), A[0].c2p(3, 0), color=BLUE)
self.play(Write(Dot(A[0].c2p(3, 1))))
        self.play(Write(l2))
        t2 = TexMobject("x_2").next_to(l2, DOWN)
        self.play(Write(t2))
        self.wait(2)

        t = TexMobject(
        r"\begin{cases}\frac{x_1+x_2}{2}=x_0,\\f(x_1)=f(x_2) \end{cases}").to_edge(LEFT)
        self.play(Write(t))
        self.wait(2)
        self.play(Uncreate(VGroup(A,t1,t2,t3,l1,l2,l3,func,t)))
        t4=TexMobject(r"\mathrm{case}3:f(x)\text{关于}x=\frac{a+b}{2}\text{对称}").to_edge(LEFT).to_edge(UP)
        self.play(ReplacementTransform(t5,t4))
        self.wait(2)
        self.tex("f(a+mx)=f(b-mx)\Leftrightarrow f(a+b-mx)=f(mx)",UP)
        self.wait(1)
        self.tex(r"\frac{a+mx+b-mx}{2}=\frac{a+b}{2}")
        self.wait(2)
        self.clear()
        self.title(r"\mathrm{case}4:f(x)\text{关于点}(a,b)\text{对称}")
        A = self.axe(-1, 5, -1, 4).shift(2*DOWN)
        self.play(Write(A))
        func = FunctionGraph(lambda x: ((x-1) ** 3)+1, x_min=-0.4, x_max=2.4).shift(DOWN).shift(RIGHT)
        self.play(Write(func))
        self.wait(2)
        D=Dot(A[0].c2p(2, 2))
        self.play(Write(D))
        t0=TexMobject("(a,b)").next_to(D,DOWN)
        self.play(Write(t0))
        self.wait()
        D1 = Dot(A[0].c2p(1, 1))
        self.play(Write(D1))
        l3 = DashedLine(A[0].c2p(1, 1), A[0].c2p(1, 0), color=BLUE)
        self.play(Write(l3))
        t3 = TexMobject("x_1").next_to(l3, DOWN)
        self.play(Write(t3))
        D2= Dot(A[0].c2p(3, 3))
        self.play(Write(D2))
        l1 = DashedLine(A[0].c2p(3, 3), A[0].c2p(3, 0), color=BLUE)
        self.wait()
        self.play(Write(l1))
        t1 = TexMobject("x_2").next_to(l1,DOWN)
        self.play(Write(t1))
        self.wait()
        l2 = DashedLine(A[0].c2p(1, 1), A[0].c2p(0, 1), color=BLUE)
        self.play(Write(l2))
        t2 = TexMobject("f(x_1)").next_to(l2, LEFT)
        self.play(Write(t2))
        l4 = DashedLine(A[0].c2p(3, 3), A[0].c2p(0, 3), color=BLUE)
        self.wait()
        self.play(Write(l4))
        t4 = TexMobject("f(x_2)").next_to(l4, LEFT)
        self.play(Write(t4))
        self.wait()
        t = TexMobject(
            r"\begin{cases}\frac{x_1+x_2}{2}=a,\\ \frac{f(x_1)+f(x_2)}{2}=b \end{cases}").to_edge(LEFT)
        self.play(Write(t))
        self.wait(2)
        self.play(Uncreate(VGroup(A, t1, t2, t3,t4, l1, l2, l3,l4,t0,D,D1,D2, func, )))
        t1=TexMobject(r"\Rightarrow \frac{f(x_1)+f(2a-x_1)}{2}=b").shift(RIGHT)
        self.wait(2)
        self.play(Write(t1))
        self.wait(2)
        t2=TexMobject(r"f(x)+f(2a-x)=2b").shift(RIGHT)
        self.play(ReplacementTransform(t1, t2))
        t3=TexMobject(r"f(a+x)+f(a-x)=2b").next_to(t2,DOWN)
        self.wait()
        self.play(Write(t3))
        self.wait(2)
        self.clear()
        t11 = TextMobject("Thanks", font='Times New Roman').scale(3)
        self.play(Write(t11))
        self.wait(2)




